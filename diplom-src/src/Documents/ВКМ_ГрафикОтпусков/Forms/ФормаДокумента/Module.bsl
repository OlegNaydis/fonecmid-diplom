
&НаСервере
Функция ПоместитьТаблицуВоВремХранилище()
	// Вставить содержимое обработчика.  
	табдок = Объект.ОтпускаСотрудников.Выгрузить();
	АдресВХ = ПоместитьВоВременноеХранилище(табдок, УникальныйИдентификатор);  
	Возврат АдресВХ; 
КонецФункции

&НаКлиенте
Процедура АнализГрафика(Команда)  
	АдресВХ = ПоместитьТаблицуВоВремХранилище();	
	
	Парам = Новый Структура("АдресВХ", АдресВХ);
	ОткрытьФорму("Документ.ВКМ_ГрафикОтпусков.Форма.АнализГрафика", Парам, ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОтпускаСотрудниковДатаНачалаПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ОтпускаСотрудников.ТекущиеДанные; 
	РассчитатьДлительность(ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура ОтпускаСотрудниковДатаОкончанияПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ОтпускаСотрудников.ТекущиеДанные; 
	РассчитатьДлительность(ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьДлительность(текДанные)
	Если ЗначениеЗаполнено(ТекДанные.ДатаНачала) и ЗначениеЗаполнено(ТекДанные.ДатаОкончания) Тогда  
		Если  ТекДанные.ДатаОкончания>=ТекДанные.ДатаНачала Тогда
		    ТекДанные.Длительность = (ТекДанные.ДатаОкончания-ТекДанные.ДатаНачала)/86400+1;
		Иначе
	        ТекДанные.Длительность = 0;
		КонецЕсли;	
	Иначе
	    ТекДанные.Длительность = 0;
	КонецЕсли;  
	РассчитатьИтДлительность(текДанные.Сотрудник);
КонецПроцедуры                 

&НаСервере
Процедура РассчитатьИтДлительность(прмСотрудник)
	табдок = Объект.ОтпускаСотрудников.Выгрузить();
	табдок.Свернуть("Сотрудник","Длительность"); 
	ИтДлительность = табдок.Найти(прмСотрудник,"Сотрудник").Длительность;  
	прмОтбор = Новый Структура("Сотрудник",прмСотрудник);
	СтрокиСотр = Объект.ОтпускаСотрудников.НайтиСтроки(прмОтбор); 
	Для каждого строкаДок Из СтрокиСотр Цикл
	    строкаДок.ИтДлительность = ИтДлительность;
	КонецЦикла;
КонецПроцедуры	

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Для каждого текДанные Из Объект.ОтпускаСотрудников Цикл
	    РассчитатьДлительность(текДанные)
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	УсловноеОформление.Элементы.Очистить();

    МассивИменКолонок = Новый Массив;
    Для каждого Стр из Элементы.ОтпускаСотрудников.ПодчиненныеЭлементы Цикл
        МассивИменКолонок.Добавить(Стр.Имя);
    КонецЦикла;
    
    ЭлементОформления = УсловноеОформление.Элементы.Добавить();
    ЭлементОформления.Использование = Истина;
    ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста",  Новый Цвет(255, 0, 0));
    
    ЭлементУсловия                = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементУсловия.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.ОтпускаСотрудников.ИтДлительность");
    ЭлементУсловия.ПравоеЗначение = 28;
    ЭлементУсловия.ВидСравнения   = ВидСравненияКомпоновкиДанных.Больше;   
    ЭлементУсловия.Использование  = Истина;
    
    Для каждого ТекЭлемент из МассивИменКолонок Цикл
        ОформляемоеПоле      = ЭлементОформления.Поля.Элементы.Добавить();
        ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ТекЭлемент);
    КонецЦикла;
	
КонецПроцедуры	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьУсловноеОформление();
КонецПроцедуры


