
&НаСервере
Процедура ЗаполнитьНаСервере()     
	Если НЕ ЗначениеЗаполнено(Объект.Период) Тогда
	    ОбщегоНазначения.СообщитьПользователю("Не выбран период");
		Возврат;
	КонецЕсли;
	
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Организация КАК Организация,
		|	ДоговорыКонтрагентов.Владелец КАК Контрагент,
		|	ДоговорыКонтрагентов.Ссылка КАК Договор,
		|	МАКСИМУМ(РеализацияТоваровУслуг.Ссылка) КАК Документ
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|		ПО (РеализацияТоваровУслуг.Договор = ДоговорыКонтрагентов.Ссылка)
		|		И РеализацияТоваровУслуг.Проведен = ИСТИНА
		|		И РеализацияТоваровУслуг.Дата МЕЖДУ &Дата1 И &Дата2
		|ГДЕ
		|	ДоговорыКонтрагентов.ВидДоговора = &ВидДоговора 
		|	И ДоговорыКонтрагентов.ВКМ_ДатаНачала <= &Дата2
		|	И ДоговорыКонтрагентов.ВКМ_ДатаОкончания >= &Дата1
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоговорыКонтрагентов.Организация,
		|	ДоговорыКонтрагентов.Владелец,
		|	ДоговорыКонтрагентов.Ссылка";
	
	Запрос.УстановитьПараметр("ВидДоговора", Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание);
	Запрос.УстановитьПараметр("Дата1",Объект.Период.ДатаНачала);
	Запрос.УстановитьПараметр("Дата2",Объект.Период.ДатаОкончания);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Объект.ДоговорыИДокументы.Очистить();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
		СтрокаТЧ = Объект.ДоговорыИДокументы.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Функция СоздатьДокументыНаСервере()
	// Вставить содержимое обработчика.    
	
    таб = Объект.ДоговорыИДокументы.Выгрузить();  
	СтруктПараметры = Новый Структура;
	СтруктПараметры.Вставить("ТаблицаДоговоров", таб);
	СтруктПараметры.Вставить("ДатаОкончания",Объект.Период.ДатаОкончания);
	
	Идентификатор = ДлительныеОперации.ВыполнитьФункцию(УникальныйИдентификатор,"Обработки.ВКМ_МассовоеСозданиеАктов.СоздатьАкты",СтруктПараметры);
	Возврат Идентификатор;    
	
КонецФункции

&НаСервере
Процедура ОбновитьНаСервере(АдресРезультата) Экспорт  
	
	СтруктураРезультат = ПолучитьИзВременногоХранилища(АдресРезультата);
	Если ТипЗнч(СтруктураРезультат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ДоговорыИДокументы.Загрузить(СтруктураРезультат.Таблица);
КонецПроцедуры   

&НаКлиенте
Процедура ФоновоеЗаданиеВыполнено(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда 
		Возврат;
	КонецЕсли;
		
	Если Результат.Статус = "Выполнено" Тогда 
		ОбновитьНаСервере(Результат.АдресРезультата);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СоздатьДокументы(Команда)      
	
	Идентификатор = СоздатьДокументыНаСервере(); 
	Оповещение = Новый ОписаниеОповещения("ФоновоеЗаданиеВыполнено", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(Идентификатор, Оповещение);
	
КонецПроцедуры
